<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (C) 2010-2014 simpligility technoligies inc. Copyright (C) 
  2009, 2010 Jayway AB Copyright (C) 2007-2008 JVending Masa Licensed under 
  the Apache License, Version 2.0 (the "License"); you may not use this file 
  except in compliance with the License. You may obtain a copy of the License 
  at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable 
  law or agreed to in writing, software distributed under the License is distributed 
  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either 
  express or implied. See the License for the specific language governing permissions 
  and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- the progressive-company-super-pom manages all plugin versions for 
    us, we only need to override where we depend on lower version (e.g. plugin-plugin) -->
  <parent>
    <groupId>com.simpligility.maven</groupId>
    <artifactId>progressive-organization-pom</artifactId>
    <version>4.1.0</version>
  </parent>

  <groupId>com.simpligility.maven.plugins</groupId>
  <artifactId>android-ndk-maven-plugin</artifactId>
  <version>1.1.1-SNAPSHOT</version>
  <packaging>maven-plugin</packaging>

  <name>Android NDK Maven Plugin - android-ndk-maven-plugin</name>
  <description>Maven Plugin for Android Development with the NDK</description>

  <url>http://simpligility.github.io/android-ndk-maven-plugin/</url>
  <inceptionYear>2014</inceptionYear>

  <properties>
    <scm.branch>master</scm.branch>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.api.version>3.0.5</maven.api.version>
    <maven-plugin-plugin.version>3.4</maven-plugin-plugin.version>
    <takari.test.version>2.8.0</takari.test.version>

    <easymock.version>3.4</easymock.version>
    <powermock.version>1.6.4</powermock.version>
    <asm.version>5.0.4</asm.version>
 
    <!-- Attention - make sure that the tools version is the versions of 
      the transitive dependencies of the builder version -->
    <android.builder.version>1.5.0</android.builder.version>
    <android.tools.version>24.5.0</android.tools.version>
  </properties>

  <scm>
    <url>https://github.com/simpligility/android-ndk-maven-plugin/tree/${scm.branch}</url>
    <connection>scm:git:git://github.com/simpligility/android-ndk-maven-plugin.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/simpligility/android-ndk-maven-plugin.git</developerConnection>
    <tag>0.1.0</tag>
  </scm>

  <issueManagement>
    <system>Github</system>
    <url>https://github.com/simpligility/android-ndk-maven-plugin/issues</url>
  </issueManagement>

  <ciManagement>
    <system>Travis</system>
    <url>https://travis-ci.org/simpligility/android-ndk-maven-plugin</url>
  </ciManagement>

  <distributionManagement>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <site>
      <id>github</id>
      <url>scm:git:ssh://git@github.com/simpligility/android-ndk-maven-plugin.git</url>
    </site>
  </distributionManagement>
  
  <licenses>
    <license>
      <name>Apache 2.0</name>
      <url>LICENSE.txt</url>
    </license>
  </licenses>

  <developers>
   <developer>
     <name>Committers</name>
     <id>Committers</id>
     <url>https://github.com/orgs/simpligility/teams/android-maven-plugins-core-committers</url>
     <roles>
       <role>Committers</role>
     </roles>
   </developer>
   <developer>
     <name>Contributors</name>
     <id>contributors</id>
     <url>https://github.com/simpligility/android-ndk-maven-plugin/graphs/contributors</url>
     <roles>
       <role>Developer</role>
       <role>Contributor</role>
     </roles>
   </developer>
  </developers>
  
  <mailingLists>
    <mailingList>
      <name>Maven Android Developers</name>
      <archive>http://groups.google.com/group/maven-android-developers/topics</archive>
    </mailingList>
  </mailingLists>

  <prerequisites>
    <!-- define the version need to run this plugin -->
    <maven>3.0.5</maven>
  </prerequisites>

  <dependencies>
    <dependency>
      <groupId>com.android.tools</groupId>
      <artifactId>common</artifactId>
      <version>${android.tools.version}</version>
    </dependency>

    <dependency>
      <groupId>com.android.tools.ddms</groupId>
      <artifactId>ddmlib</artifactId>
      <version>${android.tools.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <version>${maven.api.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <version>${maven.api.version}</version>
    </dependency>

    <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-compat</artifactId>
        <version>${maven.api.version}</version>
    </dependency>

    <dependency>
        <groupId>org.apache.maven.shared</groupId>
        <artifactId>maven-dependency-tree</artifactId>
        <version>2.2</version>
    </dependency>

    <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-archiver</artifactId>
        <version>3.0.0</version>
    </dependency>

    <dependency>
        <groupId>org.apache.maven.plugin-tools</groupId>
        <artifactId>maven-plugin-annotations</artifactId>
        <version>${maven-plugin-plugin.version}</version>
        <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.4</version>
    </dependency>

    <!-- Various Testing Dependencies -->
    <dependency>
      <groupId>org.apache.maven.plugin-testing</groupId>
      <artifactId>maven-plugin-testing-harness</artifactId>
      <version>3.3.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.takari.maven.plugins</groupId>
      <artifactId>takari-plugin-testing</artifactId>
      <version>${takari.test.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.takari.maven.plugins</groupId>
      <artifactId>takari-plugin-integration-testing</artifactId>
      <version>${takari.test.version}</version>
      <type>pom</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>

    <dependency>
        <groupId>org.easymock</groupId>
        <artifactId>easymock</artifactId>
        <version>${easymock.version}</version>
        <scope>test</scope>
    </dependency>

    <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-core</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
    </dependency>

    <!-- EOF Various Testing Dependencies -->

  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
      </resource>
      <resource>
        <directory>${project.basedir}/src/main/filtered-resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <configuration>
            <!-- we are using the Maven code style from the Maven Checkstyle 
              Plugin but with header check disabled, using the license plugin for that 
              instead -->
            <configLocation>src/conf/maven_checks.xml</configLocation>
            <enableRulesSummary>false</enableRulesSummary>
            <excludes>**/HelpMojo*.*</excludes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.plexus</groupId>
          <artifactId>plexus-component-metadata</artifactId>
          <version>1.6</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-component-metadata</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>generate-metadata</goal>
              <goal>generate-test-metadata</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-sources</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>initialize</phase>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[3.2.1,)</version>
                  <message>Check for Maven version &gt;=3.0.4 failed.
                    Upgrade your Maven installation to be able to build
                    this project.</message>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>[1.7.0,)</version>
                  <message>Java 7 or higher is required to build the
                    Android Maven Plugin.</message>
                  <!-- because the takari-plugin-testing needs Java 7 -->
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-scm-plugin</artifactId>
        <configuration>
          <scmVersionType>branch</scmVersionType>
          <scmVersion>${scm.branch}</scmVersion>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-scm-publish-plugin</artifactId>
        <configuration>
          <pubScmUrl>${project.scm.developerConnection}</pubScmUrl>
          <scmBranch>gh-pages</scmBranch>
          <content>${project.reporting.outputDirectory}</content>
        </configuration>
        <executions>
          <execution>
            <id>scm-publish</id>
            <phase>site-deploy</phase><!-- deploy site with maven-scm-publish-plugin -->
            <goals>
              <goal>publish-scm</goal>
            </goals>
          </execution>
       </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <configuration>
          <skipDeploy>true</skipDeploy><!-- don't deploy site with maven-site-plugin -->
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.asciidoctor</groupId>
            <artifactId>asciidoctor-maven-plugin</artifactId>
            <version>1.5.3</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <useReleaseProfile>false</useReleaseProfile>
          <arguments>-Pofficial-release</arguments>
          <goals>plugin:report deploy site-deploy</goals>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestEntries>
              <Build-Source-Version>1.7</Build-Source-Version>
              <Build-Target-Version>1.7</Build-Target-Version>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-plugin-plugin</artifactId>
        <version>${maven-plugin-plugin.version}</version><!--$NO-MVN-MAN-VER$-->
        <configuration>
          <skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
        </configuration>
        <executions>
          <execution>
            <id>generated-helpmojo</id>
            <goals>
              <goal>helpmojo</goal>
            </goals>
          </execution>
          <execution>
            <id>generate-descriptor</id>
            <goals>
              <goal>descriptor</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <extensions>true</extensions>
        <inherited>false</inherited>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
          <stagingProfileId>42b61fb4c62700</stagingProfileId>
          <autoReleaseAfterClose>true</autoReleaseAfterClose>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
        <configuration>
          <signature>
            <groupId>org.codehaus.mojo.signature</groupId>
            <artifactId>java17</artifactId>
            <version>1.0</version>
          </signature>
        </configuration>
        <executions>
          <execution>
            <id>check-java17</id>
            <phase>test</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- add support for reactor resolution based IT tests -->
      <plugin>
        <groupId>io.takari.maven.plugins</groupId>
        <artifactId>takari-lifecycle-plugin</artifactId>
        <extensions>true</extensions>
         <executions>
          <execution>
            <id>testProperties</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>testProperties</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-plugin-plugin</artifactId>
        <version>${maven-plugin-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <configuration>
          <linkXRef>true</linkXRef>
          <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
          <minimumTokens>100</minimumTokens>
          <targetJdk>1.7</targetJdk>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <configuration>
          <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <quiet>true</quiet>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <configuration>
          <excludeFilterFile>src/conf/findbugs-exclude.xml</excludeFilterFile>
          <xmlOutput>true</xmlOutput>
          <threshold>Low</threshold>
          <effort>Max</effort>
          <debug>false</debug>
          <relaxed>false</relaxed>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>it</id>
      <!-- the integration tests require a device or emulator attached via 
        ADB -->
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>official-release</id>
      <build>
        <plugins>
          <!-- We want to sign the artifact, the POM, and all attached artifacts -->
          <plugin>
            <artifactId>maven-gpg-plugin</artifactId>
            <configuration>
              <useAgent>true</useAgent>
            </configuration>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <inherited>true</inherited>
            <artifactId>maven-deploy-plugin</artifactId>
            <configuration>
              <updateReleaseInfo>true</updateReleaseInfo>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
              <encoding>${project.build.sourceEncoding}</encoding>
            </configuration>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
